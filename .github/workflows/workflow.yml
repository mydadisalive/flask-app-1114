name: Flask-App
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - uses: actions/checkout@v4

    # Step 2: Set Image Tag
    - name: Set Image Tag
      id: tag
      run: echo "IMAGE_TAG=1.0.${{ github.run_number }}" >> $GITHUB_ENV

    # Step 3: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 4: Build the Docker image
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag mydadisalive/flask-app:${{ env.IMAGE_TAG }}

    # Step 5: Push the Docker image
    - name: Push the Docker image
      run: docker push mydadisalive/flask-app:${{ env.IMAGE_TAG }}

    # Step 6: Modify the YAML file
    - name: Update image version in flask-app.yaml
      run: |
        sed -i "s|image: mydadisalive/flask-app:.*|image: mydadisalive/flask-app:${{ env.IMAGE_TAG }}|" flask-app.yaml

    # Step 7: Install sshpass
    - name: Install sshpass
      run: sudo apt-get install -y sshpass

    # Step 8: SCP the flask-app.yaml file
    - name: Transfer flask-app.yaml via SCP
      env:
        SCP_PASSWORD: ${{ secrets.SCP_PASSWORD }}
      run: |
        sshpass -p "$SCP_PASSWORD" scp -o StrictHostKeyChecking=no flask-app.yaml sela@35.195.225.171:/home/sela/

    # Step 9: SSH to the machine and apply the YAML
    - name: Apply flask-app.yaml on Kubernetes
      env:
        SSH_PASSWORD: ${{ secrets.SCP_PASSWORD }}
      run: |
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no sela@35.195.225.171 "kubectl apply -f /home/sela/flask-app.yaml"
